score.pipeline.version =1.3

##############################
###### Input parameters ######
##############################

spectra.folder = C:/path-to-spectra-folder
spectra.to.compare.folder = C:/path-to-comparison-spectra-dataset-folder

## A path that contains output files
output.folder = C:/path-to-results-folder

#########################################
######### Calculation parameters ########
#########################################
## Select the spectra to compare either (true: based on the same precursor charge; false: regardless of precursor charge)
is.charged.based = false
## Maximum precursor charge in both data sets. This is only functional, when spectra are scored with is.charged.based=true 
max.charge=5
## MS1 and MS2error value
## If this is set to 0, no precursor tolerance is selected (in ppm)
precursor.tolerance = 0
# The fragment tolerance unit is in Da.
fragment.tolerance = 0.5

## Score spectra within +-2 slice, in total 5 slices...
## For example, ni_hq_Goat_taenia_hydatigena_rt_1.mgf comes from the first gel slice (true or false)
calculate.only5 = false

## Index number to indicate gel slice (starts from 0). 
# Note that a spectrum title must contains "_" to show also gel slice number, and this number was used.
# For example, ni_hq_Goat_taenia_hydatigena_rt_1.mgf comes from the first gel slice so slice.index=6
# If calculate.only5 is false, then it calculates every spectrum on the given folder regardless of gel slice. 
# Ignore it if you do not consider slice information on title
slice.index = 6

## Minimum numer of m/z value to start binning
minmz = 100

## Maximum value of m/z for the last bin
maxmz=3500

## Scoring options: cumbinom, dot, pearson, spearman 
scoringType=cumbinom

## Allows to start to perform pipeline or spectrum library searching related parts 0:Published pipeline 1:Spectrum library searching
search.mode=1

##############################
## Preprocessing parameters ##
##############################
## Intensity transformation with; 0: Nothing, 1: Log2 transformation, 2: Square root transformation 
transformation = 0

## Noise filtering with; 0: Nothing, 1: PrideAsap-Adaptive noise filtering, 2: TopN intense peak selection, 3: Discard peaks with less than 5% of precursor-intensity
noise.filtering = 0

# If noiseFiltering=2 is selected, set the value of TOPN intense peaks (topN = 50 will keep the top intense 50 peaks) 
topN = 50

## # If noiseFiltering=3 is selected, set the value of percent of peaks to remove (percent = 5 will remove any peak with intensity of less than 5% of precursor-intensity ) 
percent = 5

# true: remove any peaks derived from precursor ion (false: do nothing)
precursor.peak.removal = false

## Order of preprocessing (true: first noise filter then transformation; false: first transformation then noise filter (true or false))
isNFTR = true

#########################################
####### Multithreading parameters #######
#########################################
thread.numbers = 4