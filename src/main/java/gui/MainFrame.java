package gui;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JTextField;

/**
 * The GUI main frame.
 *
 * @author Niels Hulstaert
 */
public class MainFrame extends javax.swing.JFrame {

    private final JFileChooser spectraDirectoryChooser = new JFileChooser();
    private final JFileChooser comparisonSpectraDirectoryChooser = new JFileChooser();
    private final JFileChooser outputDirectoryChooser = new JFileChooser();

    /**
     * Constructor.
     */
    public MainFrame() {
        initComponents();
    }

    public JFileChooser getSpectraDirectoryChooser() {
        return spectraDirectoryChooser;
    }

    public JFileChooser getComparisonSpectraDirectoryChooser() {
        return comparisonSpectraDirectoryChooser;
    }

    public JFileChooser getOutputDirectoryChooser() {
        return outputDirectoryChooser;
    }

    public JButton getComparisonSpectraDirectoryButton() {
        return comparisonSpectraDirectoryButton;
    }

    public JTextField getComparisonSpectraDirectoryTextField() {
        return comparisonSpectraDirectoryTextField;
    }

    public JButton getOutputDirectoryButton() {
        return outputDirectoryButton;
    }

    public JTextField getOutputDirectoryTextField() {
        return outputDirectoryTextField;
    }

    public JButton getSpectraDirectoryButton() {
        return spectraDirectoryButton;
    }

    public JTextField getSpectraDirectoryTextField() {
        return spectraDirectoryTextField;
    }

    public JCheckBox getChargeCheckBox() {
        return chargeCheckBox;
    }

    public JTextField getFileNameSliceIndexTextField() {
        return fileNameSliceIndexTextField;
    }

    public JTextField getFragmentLabelToleranceLabel() {
        return fragmentToleranceTextField;
    }

    public JTextField getMaximumMzTextField() {
        return maximumMzTextField;
    }

    public JTextField getMinimumMzTextField() {
        return minimumMzTextField;
    }

    public JCheckBox getNeighbourSlicesOnlyCheckBox() {
        return neighbourSlicesOnlyCheckBox;
    }

    public JComboBox<String> getNoiseFilterComboBox() {
        return noiseFilterComboBox;
    }

    public JTextField getNumberOfPeaksCutoffTextField() {
        return numberOfPeaksCutoffTextField;
    }

    public JTextField getNumberOfThreadsTextField() {
        return numberOfThreadsTextField;
    }

    public JTextField getPeakIntensityCutoffTextField() {
        return peakIntensityCutoffTextField;
    }

    public JTextField getPrecursorToleranceTextField() {
        return precursorToleranceTextField;
    }

    public JTextField getFragmentToleranceTextField() {
        return fragmentToleranceTextField;
    }

    public JComboBox<String> getPreprocessingOrderComboBox() {
        return preprocessingOrderComboBox;
    }

    public JCheckBox getRemovePrecursorIonPeaksCheckBox() {
        return removePrecursorIonPeaksCheckBox;
    }

    public JComboBox<String> getTransformationComboBox() {
        return transformationComboBox;
    }

    public JComboBox<String> getBinWeightingComboBox() {
        return binWeightingComboBox;
    }

    public JButton getCloseButton() {
        return closeButton;
    }

    public JButton getRunButton() {
        return runButton;
    }

    public void setBinWeightingComboBox(JComboBox<String> binWeightingComboBox) {
        this.binWeightingComboBox = binWeightingComboBox;
    }

    public void setNoiseFilterComboBox(JComboBox<String> noiseFilterComboBox) {
        this.noiseFilterComboBox = noiseFilterComboBox;
    }

    public void setPreprocessingOrderComboBox(JComboBox<String> preprocessingOrderComboBox) {
        this.preprocessingOrderComboBox = preprocessingOrderComboBox;
    }

    public void setTransformationComboBox(JComboBox<String> transformationComboBox) {
        this.transformationComboBox = transformationComboBox;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        mainPanel = new javax.swing.JPanel();
        inputAndOutputPanel = new javax.swing.JPanel();
        spectraDirectoryLabel = new javax.swing.JLabel();
        spectraDirectoryTextField = new javax.swing.JTextField();
        spectraDirectoryButton = new javax.swing.JButton();
        spectraToCompareDirectoryLabel = new javax.swing.JLabel();
        comparisonSpectraDirectoryTextField = new javax.swing.JTextField();
        comparisonSpectraDirectoryButton = new javax.swing.JButton();
        outputDirectoryLabel = new javax.swing.JLabel();
        outputDirectoryTextField = new javax.swing.JTextField();
        outputDirectoryButton = new javax.swing.JButton();
        pipelineParametersPanel = new javax.swing.JPanel();
        chargeCheckBox = new javax.swing.JCheckBox();
        precursorLabelToleranceLabel = new javax.swing.JLabel();
        precursorToleranceTextField = new javax.swing.JTextField();
        fragmentToleranceLabel = new javax.swing.JLabel();
        fragmentToleranceTextField = new javax.swing.JTextField();
        minimumMzLabel = new javax.swing.JLabel();
        maximumMzLabel = new javax.swing.JLabel();
        minimumMzTextField = new javax.swing.JTextField();
        maximumMzTextField = new javax.swing.JTextField();
        preprocessingParametersPanel = new javax.swing.JPanel();
        noiseFilterLabel = new javax.swing.JLabel();
        peakIntensityCutoffTextField = new javax.swing.JTextField();
        binWeightingLabel = new javax.swing.JLabel();
        removePrecursorIonPeaksCheckBox = new javax.swing.JCheckBox();
        binWeightingComboBox = new javax.swing.JComboBox<>();
        numberOfPeaksCutoffTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        noiseFilterComboBox = new javax.swing.JComboBox<>();
        transformationComboBox = new javax.swing.JComboBox<>();
        numberOfPeaksCutoffLabel = new javax.swing.JLabel();
        peakIntensityCutoffLabel = new javax.swing.JLabel();
        preprocessingOrderLabel = new javax.swing.JLabel();
        preprocessingOrderComboBox = new javax.swing.JComboBox<>();
        neighbourSlicesOnlyCheckBox = new javax.swing.JCheckBox();
        fileNameSliceIndexLabel = new javax.swing.JLabel();
        fileNameSliceIndexTextField = new javax.swing.JTextField();
        otherParametersPanel = new javax.swing.JPanel();
        numberOfThreadsLabel = new javax.swing.JLabel();
        numberOfThreadsTextField = new javax.swing.JTextField();
        closeButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        inputAndOutputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Input & Output"));
        inputAndOutputPanel.setOpaque(false);

        spectraDirectoryLabel.setText("Select the spectra directory*:");

        spectraDirectoryButton.setText("browse...");

        spectraToCompareDirectoryLabel.setText("Select the comparison spectra directory*:");

        comparisonSpectraDirectoryButton.setText("browse...");

        outputDirectoryLabel.setText("Select the output directory*:");

        outputDirectoryButton.setText("browse...");

        javax.swing.GroupLayout inputAndOutputPanelLayout = new javax.swing.GroupLayout(inputAndOutputPanel);
        inputAndOutputPanel.setLayout(inputAndOutputPanelLayout);
        inputAndOutputPanelLayout.setHorizontalGroup(
            inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputAndOutputPanelLayout.createSequentialGroup()
                .addGroup(inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputAndOutputPanelLayout.createSequentialGroup()
                        .addGroup(inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spectraToCompareDirectoryLabel)
                            .addComponent(outputDirectoryLabel)
                            .addComponent(spectraDirectoryLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(inputAndOutputPanelLayout.createSequentialGroup()
                        .addGroup(inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(outputDirectoryTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comparisonSpectraDirectoryTextField)
                            .addComponent(spectraDirectoryTextField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spectraDirectoryButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comparisonSpectraDirectoryButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(outputDirectoryButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        inputAndOutputPanelLayout.setVerticalGroup(
            inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputAndOutputPanelLayout.createSequentialGroup()
                .addComponent(spectraDirectoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spectraDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spectraDirectoryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spectraToCompareDirectoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comparisonSpectraDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comparisonSpectraDirectoryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputDirectoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputAndOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputDirectoryButton)))
        );

        pipelineParametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Pipeline parameters"));
        pipelineParametersPanel.setOpaque(false);

        chargeCheckBox.setText("Compare spectra regardless of charge");

        precursorLabelToleranceLabel.setText("Precursor tolerance (ppm)*:");

        fragmentToleranceLabel.setText("Fragment tolerance (Da)*:");

        minimumMzLabel.setText("Min m/z*:");

        maximumMzLabel.setText("Max m/z*:");

        preprocessingParametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Preprocessing"));
        preprocessingParametersPanel.setOpaque(false);

        noiseFilterLabel.setText("Noise filter*:");

        binWeightingLabel.setText("Bin weighting*:");

        removePrecursorIonPeaksCheckBox.setText("Remove precursor ion peaks");

        binWeightingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "sum of intensities", "mean", "median" }));

        jLabel1.setText("Transformation*:");

        noiseFilterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "PrideAsap-Adaptive noise filtering", "TopN intense peak selection", "Discard peaks with less than x% of precursor-intensity" }));

        transformationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none", "log2", "square root" }));

        numberOfPeaksCutoffLabel.setText("Number of peaks cutoff:");

        peakIntensityCutoffLabel.setText("Peak intensity cutoff (%):");

        preprocessingOrderLabel.setText("Preprocessing order*:");

        preprocessingOrderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "noise filter - transformation", "transformation - noise filter" }));

        javax.swing.GroupLayout preprocessingParametersPanelLayout = new javax.swing.GroupLayout(preprocessingParametersPanel);
        preprocessingParametersPanel.setLayout(preprocessingParametersPanelLayout);
        preprocessingParametersPanelLayout.setHorizontalGroup(
            preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preprocessingParametersPanelLayout.createSequentialGroup()
                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(preprocessingParametersPanelLayout.createSequentialGroup()
                        .addComponent(noiseFilterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noiseFilterComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(preprocessingParametersPanelLayout.createSequentialGroup()
                        .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(preprocessingParametersPanelLayout.createSequentialGroup()
                                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numberOfPeaksCutoffLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(peakIntensityCutoffLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(peakIntensityCutoffTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numberOfPeaksCutoffTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(removePrecursorIonPeaksCheckBox))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(preprocessingParametersPanelLayout.createSequentialGroup()
                        .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(binWeightingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(preprocessingOrderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preprocessingOrderComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(binWeightingComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(transformationComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        preprocessingParametersPanelLayout.setVerticalGroup(
            preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preprocessingParametersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preprocessingOrderLabel)
                    .addComponent(preprocessingOrderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(binWeightingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(binWeightingLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(transformationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noiseFilterLabel)
                    .addComponent(noiseFilterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfPeaksCutoffTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfPeaksCutoffLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(preprocessingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(peakIntensityCutoffLabel)
                    .addComponent(peakIntensityCutoffTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePrecursorIonPeaksCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        neighbourSlicesOnlyCheckBox.setText("Consider only the 5 neighbour slices");

        fileNameSliceIndexLabel.setText("File name slice index:");

        javax.swing.GroupLayout pipelineParametersPanelLayout = new javax.swing.GroupLayout(pipelineParametersPanel);
        pipelineParametersPanel.setLayout(pipelineParametersPanelLayout);
        pipelineParametersPanelLayout.setHorizontalGroup(
            pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pipelineParametersPanelLayout.createSequentialGroup()
                .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chargeCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pipelineParametersPanelLayout.createSequentialGroup()
                        .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pipelineParametersPanelLayout.createSequentialGroup()
                                .addComponent(precursorLabelToleranceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(pipelineParametersPanelLayout.createSequentialGroup()
                                .addComponent(fragmentToleranceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6))
                            .addGroup(pipelineParametersPanelLayout.createSequentialGroup()
                                .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(maximumMzLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                    .addComponent(minimumMzLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(precursorToleranceTextField)
                            .addComponent(fragmentToleranceTextField)
                            .addComponent(minimumMzTextField)
                            .addComponent(maximumMzTextField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pipelineParametersPanelLayout.createSequentialGroup()
                        .addComponent(fileNameSliceIndexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileNameSliceIndexTextField))
                    .addComponent(neighbourSlicesOnlyCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(preprocessingParametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pipelineParametersPanelLayout.setVerticalGroup(
            pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pipelineParametersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chargeCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precursorLabelToleranceLabel)
                    .addComponent(precursorToleranceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fragmentToleranceLabel)
                    .addComponent(fragmentToleranceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minimumMzLabel)
                    .addComponent(minimumMzTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maximumMzLabel)
                    .addComponent(maximumMzTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(neighbourSlicesOnlyCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pipelineParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameSliceIndexLabel)
                    .addComponent(fileNameSliceIndexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(preprocessingParametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        otherParametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Other"));
        otherParametersPanel.setOpaque(false);

        numberOfThreadsLabel.setText("Number of threads*:");
        numberOfThreadsLabel.setPreferredSize(new java.awt.Dimension(176, 15));

        javax.swing.GroupLayout otherParametersPanelLayout = new javax.swing.GroupLayout(otherParametersPanel);
        otherParametersPanel.setLayout(otherParametersPanelLayout);
        otherParametersPanelLayout.setHorizontalGroup(
            otherParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otherParametersPanelLayout.createSequentialGroup()
                .addComponent(numberOfThreadsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberOfThreadsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        otherParametersPanelLayout.setVerticalGroup(
            otherParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otherParametersPanelLayout.createSequentialGroup()
                .addGroup(otherParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfThreadsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfThreadsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        closeButton.setText("close");
        closeButton.setMaximumSize(new java.awt.Dimension(85, 27));
        closeButton.setMinimumSize(new java.awt.Dimension(85, 27));
        closeButton.setPreferredSize(new java.awt.Dimension(85, 27));

        runButton.setText("run");
        runButton.setToolTipText("run the pipeline with the given parameter values");
        runButton.setMaximumSize(new java.awt.Dimension(85, 27));
        runButton.setMinimumSize(new java.awt.Dimension(85, 27));
        runButton.setPreferredSize(new java.awt.Dimension(85, 27));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputAndOutputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pipelineParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(otherParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputAndOutputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pipelineParametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(otherParametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> binWeightingComboBox;
    private javax.swing.JLabel binWeightingLabel;
    private javax.swing.JCheckBox chargeCheckBox;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton comparisonSpectraDirectoryButton;
    private javax.swing.JTextField comparisonSpectraDirectoryTextField;
    private javax.swing.JLabel fileNameSliceIndexLabel;
    private javax.swing.JTextField fileNameSliceIndexTextField;
    private javax.swing.JLabel fragmentToleranceLabel;
    private javax.swing.JTextField fragmentToleranceTextField;
    private javax.swing.JPanel inputAndOutputPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel maximumMzLabel;
    private javax.swing.JTextField maximumMzTextField;
    private javax.swing.JLabel minimumMzLabel;
    private javax.swing.JTextField minimumMzTextField;
    private javax.swing.JCheckBox neighbourSlicesOnlyCheckBox;
    private javax.swing.JComboBox<String> noiseFilterComboBox;
    private javax.swing.JLabel noiseFilterLabel;
    private javax.swing.JLabel numberOfPeaksCutoffLabel;
    private javax.swing.JTextField numberOfPeaksCutoffTextField;
    private javax.swing.JLabel numberOfThreadsLabel;
    private javax.swing.JTextField numberOfThreadsTextField;
    private javax.swing.JPanel otherParametersPanel;
    private javax.swing.JButton outputDirectoryButton;
    private javax.swing.JLabel outputDirectoryLabel;
    private javax.swing.JTextField outputDirectoryTextField;
    private javax.swing.JLabel peakIntensityCutoffLabel;
    private javax.swing.JTextField peakIntensityCutoffTextField;
    private javax.swing.JPanel pipelineParametersPanel;
    private javax.swing.JLabel precursorLabelToleranceLabel;
    private javax.swing.JTextField precursorToleranceTextField;
    private javax.swing.JComboBox<String> preprocessingOrderComboBox;
    private javax.swing.JLabel preprocessingOrderLabel;
    private javax.swing.JPanel preprocessingParametersPanel;
    private javax.swing.JCheckBox removePrecursorIonPeaksCheckBox;
    private javax.swing.JButton runButton;
    private javax.swing.JButton spectraDirectoryButton;
    private javax.swing.JLabel spectraDirectoryLabel;
    private javax.swing.JTextField spectraDirectoryTextField;
    private javax.swing.JLabel spectraToCompareDirectoryLabel;
    private javax.swing.JComboBox<String> transformationComboBox;
    // End of variables declaration//GEN-END:variables
}
